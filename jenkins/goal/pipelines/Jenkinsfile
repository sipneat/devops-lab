pipeline {
  agent any

  stages {
    stage('Checkout') {
      steps {
          checkout scm
      }
    }

    stage('Build Frontend') {
      steps {
        sh 'docker build -f ./jenkins/goal/pipelines/client.Dockerfile -t sipneat/jenkins-goal-client:latest ./jenkins/goal' 

        script {
          if (true) {
            withDockerRegistry([credentialsId: '7816438f-9476-4675-9581-9bfee96303a9']) {
              sh 'docker push sipneat/jenkins-goal-client:latest'
            }
          }
        }
      }
    }

    stage('Build Backend') {
      steps {
        sh 'docker build -f ./jenkins/goal/pipelines/backend.Dockerfile -t sipneat/jenkins-goal-backend:latest ./jenkins/goal'

        script {
          if (true) {
            withDockerRegistry([credentialsId: '7816438f-9476-4675-9581-9bfee96303a9']) {
              sh 'docker push sipneat/jenkins-goal-backend:latest'
            }
          }
        }
      }
    }

    stage('End to End') {
      steps {
        sh 'docker compose -f ./jenkins/goal/pipelines/compose.yml up -d --build'
      }
    }

    stage('Cleanup') {
      steps {
        sh 'docker compose -f ./jenkins/goal/pipelines/compose.yml down'
        sh 'docker system prune -f --volumes'
        cleanWs()
      }
    }
  }
  post {
    always {
      echo 'Pipeline completed.'
    }
  }
}